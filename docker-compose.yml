version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: typescript-portfolio-web
    # Direct port access for debugging
    ports:
      - "3001:3000" 
    restart: always
    environment:
      - NODE_ENV=production
    labels:
      # Basic Traefik configuration
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      
      # HTTP router configuration - handle both apex domain and www subdomain
      - "traefik.http.routers.portfolio-http.rule=Host(`kevinlinportfolio.com`) || Host(`www.kevinlinportfolio.com`)"
      - "traefik.http.routers.portfolio-http.entrypoints=http"
      - "traefik.http.routers.portfolio-http.service=portfolio-service@docker"
      
      # Redirect to HTTPS
      - "traefik.http.middlewares.portfolio-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.portfolio-http.middlewares=portfolio-https-redirect"
      
      # HTTPS router configuration - handle both apex domain and www subdomain
      - "traefik.http.routers.portfolio-https.rule=Host(`kevinlinportfolio.com`) || Host(`www.kevinlinportfolio.com`)"
      - "traefik.http.routers.portfolio-https.entrypoints=https"
      - "traefik.http.routers.portfolio-https.tls=true"
      - "traefik.http.routers.portfolio-https.tls.certresolver=le"
      - "traefik.http.routers.portfolio-https.tls.domains[0].main=kevinlinportfolio.com"
      - "traefik.http.routers.portfolio-https.tls.domains[0].sans=www.kevinlinportfolio.com"
      - "traefik.http.routers.portfolio-https.service=portfolio-service@docker"
      
      # Service configuration
      - "traefik.http.services.portfolio-service.loadbalancer.server.port=3000"
    networks:
      - default
      - traefik-public
    depends_on:
      - db

  db:
    image: postgres:14
    container_name: typescript-portfolio-postgres
    restart: always
    environment:
      - POSTGRES_USER=typescript_portfolio_user
      - POSTGRES_PASSWORD=typescript_portfolio_pass
      - POSTGRES_DB=typescript_portfolio_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default

  # Add content volume to support the markdown blog
  content_sync:
    image: alpine:latest
    container_name: typescript-portfolio-content-sync
    volumes:
      - ./content:/content
      - content_volume:/shared_content
    command: >
      sh -c "cp -r /content/* /shared_content/ &&
             while true; do
               sleep 30;
               cp -r /content/* /shared_content/;
             done"
    restart: always

volumes:
  postgres_data:
  content_volume:

networks:
  default:
  traefik-public:
    external: true
